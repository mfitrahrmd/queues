// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId Int
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String
  session_state     String?

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Role {
  id    String       @id @default(uuid())
  name  String
  users UsersRoles[]
}

model UsersRoles {
  userId String
  roleId String
  user   User   @relation(fields: [userId], references: [id])
  role   Role   @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  birthDate     DateTime?
  address       String?
  image         String?

  accounts    Account[]
  sessions    Session[]
  roles       UsersRoles[]
  Queue       Queue[]
  QueueServed QueueServed[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Queue {
  code       String   @id
  customerId String
  at         DateTime @default(now())
  date       String

  served QueueServed?

  customer User @relation(fields: [customerId], references: [id])

  @@unique([code, date])
}

model QueueServed {
  queueCode String   @id
  at        DateTime
  adminId   String

  admin User  @relation(fields: [adminId], references: [id])
  queue Queue @relation(fields: [queueCode], references: [code])
}
